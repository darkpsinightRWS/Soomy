{"version":3,"file":"static/js/509.dcf0ccd3.chunk.js","mappings":"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","sources":["views/pages/profile/User.js"],"sourcesContent":["import React, { useState , useEffect } from \"react\";\r\nimport { updatePassword, updateUser } from \"../../../redux/userSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { clearUpdate ,setCloseModal} from \"../../../redux/userSlice\";\r\nimport {useNavigate,Link} from \"react-router-dom\"\r\nconst User = () => {\r\n    const user = useSelector((state) => state.user);\r\n    const { userInfo, isAuth ,  updateErrors,\r\n      updateLoading,updateShow } = user;\r\n      const navigate = useNavigate()\r\n    const [updatedInfo, setUpdatedInfo] = useState(userInfo);\r\n    const [newPassword, setPassword] = useState(\"\");\r\n    const [oldPassword, setOldPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [test , setTest] = useState(false)\r\n    const dispatch = useDispatch();\r\n    const handleUpdateChange = (e) => {\r\n        setUpdatedInfo({ ...updatedInfo, [e.target.name]: e.target.value });\r\n        if(JSON.stringify(updatedInfo)!==JSON.stringify(userInfo)){\r\n          setTest(true)\r\n        }\r\n      };\r\n      const handleUpdateSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(clearUpdate())\r\n        if (test) {\r\n          dispatch(updateUser({ id: userInfo._id, data: updatedInfo }));\r\n        }\r\n        if (newPassword) {\r\n  \r\n            dispatch(\r\n              updatePassword({\r\n                id: userInfo._id,\r\n                data: { oldPassword: oldPassword, newPassword: newPassword,confirmPassword:confirmPassword },\r\n              })\r\n            );\r\n          \r\n        }\r\n        setPassword(\"\");\r\n        setConfirmPassword(\"\");\r\n        setOldPassword(\"\");\r\n        setTest(false)\r\n\r\n      };\r\n      useEffect(()=>{\r\n        dispatch(setCloseModal())\r\n        return (()=>{\r\n          dispatch(clearUpdate())\r\n        })\r\n      },[dispatch])\r\n      \r\n    return (\r\n        <div className=\"px-3 py-2\">\r\n        <h2 className=\"mx-auto\">Paramètres </h2>\r\n        <form className=\"profile-form\" onSubmit={(e) => handleUpdateSubmit(e)}>\r\n          <div className=\"form-group  mt-2\">\r\n            <label for=\"formGroupExampleInput1\">\r\n              Nom\r\n            </label>\r\n            <input\r\n              value={updatedInfo.firstName}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"formGroupExampleInput1\"\r\n              onChange={(e) => handleUpdateChange(e)}\r\n              name=\"firstName\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group  mt-2\">\r\n            <label for=\"formGroupExampleInput2\">\r\n              Prénom\r\n            </label>\r\n            <input\r\n              value={updatedInfo.lastName}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"formGroupExampleInput2\"\r\n              onChange={(e) => handleUpdateChange(e)}\r\n              name=\"lastName\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group  mt-2\">\r\n            <label for=\"formGroupExampleInput3\">\r\n              Nom d'utilisateur\r\n            </label>\r\n            <input\r\n              value={updatedInfo.username}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"formGroupExampleInput3\"\r\n              onChange={(e) => handleUpdateChange(e)}\r\n              name=\"username\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group mt-2\">\r\n            <label for=\"formGroupExampleInput4\">Adresse </label>\r\n            <input\r\n              value={updatedInfo.adresse}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"formGroupExampleInput4\"\r\n              onChange={(e) => handleUpdateChange(e)}\r\n              name=\"adresse\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group mt-2\">\r\n            <label for=\"formGroupExampleInput5\">E-mail</label>\r\n            <input\r\n              value={updatedInfo.email}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"formGroupExampleInput5\"\r\n              onChange={(e) => handleUpdateChange(e)}\r\n              name=\"email\"\r\n            />\r\n          </div>\r\n\r\n          {userInfo?.facebookId ? (\r\n            <div className=\"alert alert-primary mt-2\" role=\"alert\">\r\n              Vous êtes connectés avec facebook\r\n            </div>\r\n          ) : userInfo?.googleId ? (\r\n            <div className=\"alert alert-primary mt-2\" role=\"alert\">\r\n              Vous êtes connectés avec google\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              {\" \"}\r\n              <div className=\"form-group mt-2\">\r\n                <label for=\"formGroupExampleInput6\">\r\n                Mot de passe actuel\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"formGroupExampleInput6\"\r\n                  onChange={(e) => setOldPassword(e.target.value)}\r\n                  name=\"oldPassword\"\r\n                  value={oldPassword}\r\n                />\r\n              </div>\r\n              <div className=\"form-group mt-2\">\r\n                <label for=\"formGroupExampleInput7\">\r\n                  Nouveau Mot de Passe\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"formGroupExampleInput7\"\r\n                  name=\"newPassword\"\r\n                  value={newPassword}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group mt-2\">\r\n                <label for=\"formGroupExampleInput8\">\r\n                  Confirmer Mot de Passe\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"formGroupExampleInput8\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  name=\"confirmPassword\"\r\n                />\r\n              </div>\r\n              {!userInfo?.approved?  <Alert severity=\"error\" className=\"w-100 my-5\">\r\n          Vous n'avez pas vérifié votre compte. Veuillez compléter la vérification de votre téléphone <Link to={'/phone'}>ici</Link>\r\n        </Alert>:null}\r\n            </div>\r\n          )}\r\n            { updateShow&& (\r\n                    <div className=\"alert alert-success mt-2\" role=\"alert\">\r\n                      utilisateur mis à jour\r\n                    </div>\r\n                  )}\r\n                  {updateErrors && (\r\n                    <div className=\"alert alert-danger mt-2\" role=\"alert\">\r\n                      {updateErrors}\r\n                    </div>\r\n                  )}\r\n                  {updateLoading && (\r\n                    <div className=\"d-flex justify-content-center align-items-center p-4\">\r\n                    <div className=\"spinner-border\" role=\"status\">\r\n                      <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                    </div>\r\n                  )}\r\n                \r\n          <div className=\"button-box\">\r\n            <button type=\"button\" className=\"btn btn-outline-warning\">\r\n              Annuler\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-outline-success\"\r\n              \r\n            >\r\n              Enregistrer\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default User;"],"names":["user","useSelector","state","userInfo","updateErrors","isAuth","updateLoading","updateShow","useNavigate","useState","updatedInfo","setUpdatedInfo","newPassword","setPassword","oldPassword","setOldPassword","confirmPassword","setConfirmPassword","test","setTest","dispatch","useDispatch","handleUpdateChange","e","target","name","value","JSON","stringify","useEffect","setCloseModal","clearUpdate","className","onSubmit","preventDefault","updateUser","id","_id","data","updatePassword","handleUpdateSubmit","for","firstName","type","onChange","lastName","username","adresse","email","facebookId","role","googleId","approved","severity","to"],"sourceRoot":""}