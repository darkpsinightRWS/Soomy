{"version":3,"file":"static/js/466.2b06709d.chunk.js","mappings":"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","sources":["views/pages/register/validate.js","../node_modules/@coreui/icons/js/free/cil-check-circle.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Footer from \"../../../components/footer/Footer\";\r\nimport { Link ,useLocation,useNavigate} from \"react-router-dom\";\r\nimport CIcon from '@coreui/icons-react'\r\nimport axios from \"axios\";\r\nimport {\r\ncilCheckCircle\r\n} from '@coreui/icons'\r\nimport Alert from \"@mui/material/Alert\";\r\nimport {useSelector} from \"react-redux\";\r\nconst Reset = () => {\r\n\r\n  const { search } = useLocation();\r\n  const redirectInUrlId = new URLSearchParams(search).get('id');\r\n  const redirectInUrlToken = new URLSearchParams(search).get('token');\r\nconst id = redirectInUrlId ? redirectInUrlId : '';\r\nconst token = redirectInUrlToken ? redirectInUrlToken : '';\r\n\r\n  const [newPassword, setNewPassword] = useState(null);\r\n  const [confirmPassword, setConfirmPassword] = useState(null);\r\n  const [toggle, setToggle] = useState(true);\r\n  const [toggle2, setToggle2] = useState(false);\r\n\r\n\r\n  const [errorVerif , setErrorVerif] = useState(null)\r\n  const [errorPassword , setErrorPassword] = useState(null)\r\nconst {userInfo} = useSelector(state=>state.user)\r\nconst navigate = useNavigate()\r\n\r\nuseEffect(()=>{\r\n  if(userInfo){\r\n    navigate('/')\r\n  }\r\n  },[userInfo])\r\n  \r\n useEffect(()=>{  \r\n    axios\r\n      .get(`/users/validateemail/${token}/${id}`)\r\n      .then(() => {\r\n\r\n\r\n      }).catch((err)=>{\r\n        setErrorVerif(err?.response?.data?.msg)});\r\n  },[])\r\n  function sendPassword(e) {\r\n    e.preventDefault(e);\r\n    \r\n   if(newPassword===confirmPassword){ \r\n    axios\r\n      .get(`/users/updatePasswordReset/${newPassword}/${id}`)\r\n      .then(() => {\r\n        setToggle(false);\r\n        setToggle2(true);\r\n \r\n      }).catch((err)=>{\r\n        setErrorPassword(err?.response?.data?.msg)});}\r\n        else setErrorPassword(\"passwords don't match\")\r\n  }\r\n \r\n\r\n  return (\r\n    <div>\r\n      \r\n      <main className=\"d-flex flex-column justify-content-center align-items-center register pt-lg-5\">\r\n        <div className=\"container p-4 edge-shadow-connect  d-flex justify-content-center align-items-center flex-column\">\r\n         \r\n          <form\r\n            className={`row g-3 mt-4 mx-lg-5 mx-auto px-0 ${!toggle && \"d-none\"}`}\r\n            onSubmit={(e) => sendPassword(e)}\r\n          >\r\n            <div className=\"d-flex flex-column flex-lg-row col-md-12 justify-content-between d-sm-column my-0\">\r\n              <div className=\"register-input w-100 my-1\">\r\n                <label for=\"validationServerPassword\" className=\"form-label\">\r\n                Saisissez Nouveau Mot de passe\r\n                </label>\r\n                <div className=\"input-group has-validation\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control mb-1\"\r\n                    name=\"NewPassword\"\r\n                    id=\"validationServerPassword\"\r\n                    aria-describedby=\"inputGroupPrepend3 validationServerPasswordFeedback\"\r\n                    onChange={(e) => setNewPassword(e.target.value)}\r\n                    required\r\n                  />\r\n                 \r\n                </div>\r\n                <label for=\"validationServerPassword\" className=\"form-label mt-1\">\r\n                Confirmer Mot de passe\r\n                </label>\r\n                <div className=\"input-group has-validation\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"confirmPassword\"\r\n                    id=\"validationServerUsername\"\r\n                    aria-describedby=\"inputGroupPrepend3 validationServerUsernameFeedback\"\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    required\r\n                  />\r\n                 \r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 d-flex justify-content-center align-items-center\">\r\n            \r\n              <button className=\"btn btn-register mx-1 my-3\" type=\"submit\">\r\n                Envoyer\r\n              </button>\r\n            </div>\r\n            {errorPassword? <Alert className=\"mt-2\" severity=\"error\">\r\n            {errorPassword}\r\n          </Alert>:null}\r\n          </form>\r\n          <div\r\n            className={`row g-3 my-4 mx-lg-5 mx-auto px-2 succes-validation ${!toggle2 && \"d-none\"}`}\r\n          >\r\n            <div className=\"text-center my-3 d-flex flex-column justify-content-center align-items-center\"><CIcon icon={cilCheckCircle} fontSize={50} height={70} width={70}/>  <p className=\"mt-4\">Votre Mot de passe a été Changé avec succès</p></div>\r\n            <Link to={'/signin'} className=\"mx-auto w-50\"><button className=\"btn btn-register mx-auto w-100\">Connecter</button></Link>\r\n          </div>\r\n        </div>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reset;","export const cilCheckCircle = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M426.072,86.928A238.75,238.75,0,0,0,88.428,424.572,238.75,238.75,0,0,0,426.072,86.928ZM257.25,462.5c-114,0-206.75-92.748-206.75-206.75S143.248,49,257.25,49,464,141.748,464,255.75,371.252,462.5,257.25,462.5Z' class='ci-primary'/><polygon fill='var(--ci-primary-color, currentColor)' points='221.27 305.808 147.857 232.396 125.23 255.023 221.27 351.063 388.77 183.564 366.142 160.937 221.27 305.808' class='ci-primary'/>\"]"],"names":["search","useLocation","redirectInUrlId","URLSearchParams","get","redirectInUrlToken","id","token","useState","newPassword","setNewPassword","confirmPassword","setConfirmPassword","toggle","setToggle","toggle2","setToggle2","setErrorVerif","errorPassword","setErrorPassword","userInfo","useSelector","state","user","navigate","useNavigate","useEffect","axios","then","catch","err","response","data","msg","className","onSubmit","e","preventDefault","sendPassword","for","type","name","onChange","target","value","required","severity","icon","cilCheckCircle","fontSize","height","width","to"],"sourceRoot":""}