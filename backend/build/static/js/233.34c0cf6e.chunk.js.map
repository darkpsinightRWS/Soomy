{"version":3,"file":"static/js/233.34c0cf6e.chunk.js","mappings":"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","sources":["views/widgets/WidgetsDropdown.js","views/dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CRow,\r\n  CCol,\r\n  CDropdown,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n  CDropdownToggle,\r\n  CWidgetStatsA,\r\n} from \"@coreui/react\";\r\nimport { getStyle } from \"@coreui/utils\";\r\nimport { CChartBar, CChartLine } from \"@coreui/react-chartjs\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { cilArrowBottom, cilArrowTop, cilOptions } from \"@coreui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst WidgetsDropdown = ({months, users, rooms, transactions, orders}) => {\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol sm={6} lg={3}>\r\n        <Link to=\"/dashboard/users\">\r\n          <CWidgetStatsA\r\n            className=\"mb-4\"\r\n            color=\"primary\"\r\n            value={\r\n              <>\r\n                26K{\" \"}\r\n                <span className=\"fs-6 fw-normal\">\r\n                  (-12.4% <CIcon icon={cilArrowBottom} />)\r\n                </span>\r\n              </>\r\n            }\r\n            title=\"Utilisateurs\"\r\n            action={\r\n              <CDropdown alignment=\"end\">\r\n                <CDropdownToggle\r\n                  color=\"transparent\"\r\n                  caret={false}\r\n                  className=\"p-0\"\r\n                >\r\n                  <CIcon\r\n                    icon={cilOptions}\r\n                    className=\"text-high-emphasis-inverse\"\r\n                  />\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem>Action</CDropdownItem>\r\n                  <CDropdownItem>Another action</CDropdownItem>\r\n                  <CDropdownItem>Something else here...</CDropdownItem>\r\n                  <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n            }\r\n            chart={\r\n              <CChartLine\r\n                className=\"mt-3 mx-3\"\r\n                style={{ height: \"70px\" }}\r\n                data={{\r\n                  labels: months,\r\n                  datasets: [\r\n                    {\r\n                      label: \"Utilisateurs\",\r\n                      backgroundColor: \"transparent\",\r\n                      borderColor: \"rgba(255,255,255,.55)\",\r\n                      pointBackgroundColor: getStyle(\"--cui-primary\"),\r\n                      data: users,\r\n                    },\r\n                  ],\r\n                }}\r\n                options={{\r\n                  plugins: {\r\n                    legend: {\r\n                      display: false,\r\n                    },\r\n                  },\r\n                  maintainAspectRatio: false,\r\n                  scales: {\r\n                    x: {\r\n                      grid: {\r\n                        display: false,\r\n                        drawBorder: false,\r\n                      },\r\n                      ticks: {\r\n                        display: false,\r\n                      },\r\n                    },\r\n                    y: {\r\n                      min: 0,\r\n                      max: 50,\r\n                      display: false,\r\n                      grid: {\r\n                        display: false,\r\n                      },\r\n                      ticks: {\r\n                        display: false,\r\n                      },\r\n                    },\r\n                  },\r\n                  elements: {\r\n                    line: {\r\n                      borderWidth: 1,\r\n                      tension: 0.4,\r\n                    },\r\n                    point: {\r\n                      radius: 4,\r\n                      hitRadius: 10,\r\n                      hoverRadius: 4,\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n            }\r\n          />\r\n        </Link>\r\n      </CCol>\r\n      <CCol sm={6} lg={3}>\r\n        <Link to=\"/dashboard/auctionTables\">\r\n          <CWidgetStatsA\r\n            className=\"mb-4\"\r\n            color=\"success\"\r\n            value={\r\n              <>\r\n                $6.200{\" \"}\r\n                <span className=\"fs-6 fw-normal\">\r\n                  (40.9% <CIcon icon={cilArrowTop} />)\r\n                </span>\r\n              </>\r\n            }\r\n            title=\"Enchères\"\r\n            action={\r\n              <CDropdown alignment=\"end\">\r\n                <CDropdownToggle\r\n                  color=\"transparent\"\r\n                  caret={false}\r\n                  className=\"p-0\"\r\n                >\r\n                  <CIcon\r\n                    icon={cilOptions}\r\n                    className=\"text-high-emphasis-inverse\"\r\n                  />\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem>Action</CDropdownItem>\r\n                  <CDropdownItem>Another action</CDropdownItem>\r\n                  <CDropdownItem>Something else here...</CDropdownItem>\r\n                  <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n            }\r\n            chart={\r\n              <CChartLine\r\n                className=\"mt-3 mx-3\"\r\n                style={{ height: \"70px\" }}\r\n                data={{\r\n                  labels:months,\r\n                  datasets: [\r\n                    {\r\n                      label: \"Enchères\",\r\n                      backgroundColor: \"transparent\",\r\n                      borderColor: \"rgba(255,255,255,.55)\",\r\n                      pointBackgroundColor: getStyle(\"--cui-info\"),\r\n                      data: rooms,\r\n                    },\r\n                  ],\r\n                }}\r\n                options={{\r\n                  plugins: {\r\n                    legend: {\r\n                      display: false,\r\n                    },\r\n                  },\r\n                  maintainAspectRatio: false,\r\n                  scales: {\r\n                    x: {\r\n                      grid: {\r\n                        display: false,\r\n                        drawBorder: false,\r\n                      },\r\n                      ticks: {\r\n                        display: false,\r\n                      },\r\n                    },\r\n                    y: {\r\n                      min: 0,\r\n                      max: 50,\r\n                      display: false,\r\n                      grid: {\r\n                        display: false,\r\n                      },\r\n                      ticks: {\r\n                        display: false,\r\n                      },\r\n                    },\r\n                  },\r\n                  elements: {\r\n                    line: {\r\n                      borderWidth: 1,\r\n                    },\r\n                    point: {\r\n                      radius: 4,\r\n                      hitRadius: 10,\r\n                      hoverRadius: 4,\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n            }\r\n          />\r\n        </Link>\r\n      </CCol>\r\n      <CCol sm={6} lg={3}>\r\n        <Link to=\"/dashboard/ordrs\">\r\n          <CWidgetStatsA\r\n            className=\"mb-4\"\r\n            color=\"warning\"\r\n            value={\r\n              <>\r\n                2.49{\" \"}\r\n                <span className=\"fs-6 fw-normal\">\r\n                  (84.7% <CIcon icon={cilArrowTop} />)\r\n                </span>\r\n              </>\r\n            }\r\n            title=\"Commandes\"\r\n            action={\r\n              <CDropdown alignment=\"end\">\r\n                <CDropdownToggle\r\n                  color=\"transparent\"\r\n                  caret={false}\r\n                  className=\"p-0\"\r\n                >\r\n                  <CIcon\r\n                    icon={cilOptions}\r\n                    className=\"text-high-emphasis-inverse\"\r\n                  />\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem>Action</CDropdownItem>\r\n                  <CDropdownItem>Another action</CDropdownItem>\r\n                  <CDropdownItem>Something else here...</CDropdownItem>\r\n                  <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n            }\r\n            chart={\r\n              <CChartLine\r\n                className=\"mt-3\"\r\n                style={{ height: \"70px\" }}\r\n                data={{\r\n                  labels: months,\r\n                  datasets: [\r\n                    {\r\n                      label: \"commandes\",\r\n                      backgroundColor: \"rgba(255,255,255,.2)\",\r\n                      borderColor: \"rgba(255,255,255,.55)\",\r\n                      data: orders,\r\n                      fill: true,\r\n                    },\r\n                  ],\r\n                }}\r\n                options={{\r\n                  plugins: {\r\n                    legend: {\r\n                      display: false,\r\n                    },\r\n                  },\r\n                  maintainAspectRatio: false,\r\n                  scales: {\r\n                    x: {\r\n                      display: false,\r\n                    },\r\n                    y: {\r\n                      display: false,\r\n                    },\r\n                  },\r\n                  elements: {\r\n                    line: {\r\n                      borderWidth: 2,\r\n                      tension: 0.4,\r\n                    },\r\n                    point: {\r\n                      radius: 0,\r\n                      hitRadius: 10,\r\n                      hoverRadius: 4,\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n            }\r\n          />\r\n        </Link>\r\n      </CCol>\r\n      <CCol sm={6} lg={3}>\r\n        <Link to=\"/dashboard/transactions\">\r\n          <CWidgetStatsA\r\n            className=\"mb-4\"\r\n            color=\"danger\"\r\n            value={\r\n              <>\r\n                44K{\" \"}\r\n                <span className=\"fs-6 fw-normal\">\r\n                  (-23.6% <CIcon icon={cilArrowBottom} />)\r\n                </span>\r\n              </>\r\n            }\r\n            title=\"Transactions\"\r\n            action={\r\n              <CDropdown alignment=\"end\">\r\n                <CDropdownToggle\r\n                  color=\"transparent\"\r\n                  caret={false}\r\n                  className=\"p-0\"\r\n                >\r\n                  <CIcon\r\n                    icon={cilOptions}\r\n                    className=\"text-high-emphasis-inverse\"\r\n                  />\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem>Action</CDropdownItem>\r\n                  <CDropdownItem>Another action</CDropdownItem>\r\n                  <CDropdownItem>Something else here...</CDropdownItem>\r\n                  <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n            }\r\n            chart={\r\n              <CChartBar\r\n                className=\"mt-3 mx-3\"\r\n                style={{ height: \"70px\" }}\r\n                data={{\r\n                  labels: months,\r\n                  datasets: [\r\n                    {\r\n                      label: \"transactions\",\r\n                      backgroundColor: \"rgba(255,255,255,.2)\",\r\n                      borderColor: \"rgba(255,255,255,.55)\",\r\n                      data: transactions,\r\n                      barPercentage: 0.6,\r\n                    },\r\n                  ],\r\n                }}\r\n                options={{\r\n                  maintainAspectRatio: false,\r\n                  plugins: {\r\n                    legend: {\r\n                      display: false,\r\n                    },\r\n                  },\r\n                  scales: {\r\n                    x: {\r\n                      grid: {\r\n                        display: false,\r\n                        drawTicks: false,\r\n                      },\r\n                      ticks: {\r\n                        display: false,\r\n                      },\r\n                    },\r\n                    y: {\r\n                      grid: {\r\n                        display: false,\r\n                        drawBorder: false,\r\n                        drawTicks: false,\r\n                      },\r\n                      ticks: {\r\n                        display: false,\r\n                      },\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n            }\r\n          />\r\n        </Link>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default WidgetsDropdown;\r\n","import React,{useState, useEffect} from 'react'\r\n\r\nimport {\r\n  CAvatar,\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CProgress,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport axios from \"axios\";\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\nimport { getStyle, hexToRgba } from '@coreui/utils'\r\nimport CIcon from '@coreui/icons-react'\r\nimport {\r\n  cibCcAmex,\r\n  cibCcApplePay,\r\n  cibCcMastercard,\r\n  cibCcPaypal,\r\n  cibCcStripe,\r\n  cibCcVisa,\r\n  cibGoogle,\r\n  cibFacebook,\r\n  cibLinkedin,\r\n  cifBr,\r\n  cifEs,\r\n  cifFr,\r\n  cifIn,\r\n  cifPl,\r\n  cifUs,\r\n  cibTwitter,\r\n  cilCloudDownload,\r\n  cilPeople,\r\n  cilUser,\r\n  cilUserFemale,\r\n} from '@coreui/icons'\r\n\r\nimport avatar1 from '../../assets/images/avatars/1.jpg'\r\nimport avatar2 from '../../assets/images/avatars/2.jpg'\r\nimport avatar3 from '../../assets/images/avatars/3.jpg'\r\nimport avatar4 from '../../assets/images/avatars/4.jpg'\r\nimport avatar5 from '../../assets/images/avatars/5.jpg'\r\nimport avatar6 from '../../assets/images/avatars/6.jpg'\r\nimport WidgetsBrand from '../widgets/WidgetsBrand'\r\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\r\n\r\nconst Dashboard = () => {\r\n  const random = (min, max) => Math.floor(Math.random() * (max - min + 1) + min)\r\n  const [users, setUsers] = useState();\r\n  const [rooms, setRooms] = useState();\r\n  const [orders, setOrders] = useState();\r\n  const [transactions, setTransactions] = useState();\r\n  const [loader, setLoader] = useState(false);\r\n  let months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n \r\n  const progressExample = [\r\n    { title: 'Enchère en cours', value: '29.703 Enchères', percent: 40, color: 'success' },\r\n    { title: 'Enchères en attente', value: '24.093 Enchères', percent: 20, color: 'info' },\r\n    { title: 'Enchères finies', value: '78.706 Enchères', percent: 60, color: 'warning' },\r\n    { title: 'Enchères premium', value: '22.123 Enchères', percent: 80, color: 'danger' },\r\n  ]\r\n\r\n  \r\n  useEffect(() => {\r\n    {\r\n      setLoader(true);\r\n      axios\r\n        .get(`/participations/getNumberOfDocumentsByMonth`)\r\n        .then((res) => {\r\n          setLoader(false);\r\n          let arr = [];\r\n          let months = [\r\n            \"January\",\r\n            \"February\",\r\n            \"March\",\r\n            \"April\",\r\n            \"May\",\r\n            \"June\",\r\n            \"July\",\r\n            \"August\",\r\n            \"September\",\r\n            \"October\",\r\n            \"November\",\r\n            \"December\",\r\n          ];\r\n          months.forEach((month) => {\r\n            let test = res.data.findIndex((elm) => elm.month === month);\r\n            \r\n            arr.push(test>=0 ? res.data[test].numberofdocuments : 0);\r\n          });\r\n          \r\n          setTransactions(arr);\r\n        })\r\n        .catch((err) => setLoader(false));\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    {\r\n      setLoader(true);\r\n      axios\r\n        .get(`/orders/getNumberOfDocumentsByMonth`)\r\n        .then((res) => {\r\n          setLoader(false);\r\n          let arr = [];\r\n          let months = [\r\n            \"January\",\r\n            \"February\",\r\n            \"March\",\r\n            \"April\",\r\n            \"May\",\r\n            \"June\",\r\n            \"July\",\r\n            \"August\",\r\n            \"September\",\r\n            \"October\",\r\n            \"November\",\r\n            \"December\",\r\n          ];\r\n          months.forEach((month) => {\r\n            let test = res.data.findIndex((elm) => elm.month === month);\r\n            \r\n            arr.push(test>=0 ? res.data[test].numberofdocuments : 0);\r\n          });\r\n          \r\n          setOrders(arr);\r\n        })\r\n        .catch((err) =>  setLoader(false));\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    {\r\n      setLoader(true);\r\n      axios\r\n        .get(`/rooms/getNumberOfDocumentsByMonth`)\r\n        .then((res) => {\r\n          setLoader(false);\r\n          let arr = [];\r\n          let months = [\r\n            \"January\",\r\n            \"February\",\r\n            \"March\",\r\n            \"April\",\r\n            \"May\",\r\n            \"June\",\r\n            \"July\",\r\n            \"August\",\r\n            \"September\",\r\n            \"October\",\r\n            \"November\",\r\n            \"December\",\r\n          ];\r\n          months.forEach((month) => {\r\n            let test = res.data.findIndex((elm) => elm.month === month);\r\n            \r\n            arr.push(test>=0 ? res.data[test].numberofdocuments : 0);\r\n          });\r\n          \r\n          setRooms(arr);\r\n        })\r\n        .catch((err) => setLoader(false));\r\n    }\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    {\r\n      setLoader(true);\r\n      axios\r\n        .get(`/users/getNumberOfDocumentsByMonth`)\r\n        .then((res) => {\r\n          setLoader(false);\r\n          let arr = [];\r\n          let months = [\r\n            \"January\",\r\n            \"February\",\r\n            \"March\",\r\n            \"April\",\r\n            \"May\",\r\n            \"June\",\r\n            \"July\",\r\n            \"August\",\r\n            \"September\",\r\n            \"October\",\r\n            \"November\",\r\n            \"December\",\r\n          ];\r\n          months.forEach((month) => {\r\n            let test = res.data.findIndex((elm) => elm.month === month);\r\n            \r\n            arr.push(test>=0 ? res.data[test].numberofdocuments : 0);\r\n          });\r\n          setUsers(arr);\r\n        })\r\n        .catch((err) => setLoader(false));\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n      <WidgetsDropdown months={months} users={users} rooms={rooms} orders={orders} transactions={transactions}/>\r\n      <CCard className=\"mb-4\">\r\n        <CCardBody>\r\n          <CRow>\r\n            <CCol sm={5}>\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\r\n                Traffic\r\n              </h4>\r\n              <div className=\"small text-medium-emphasis\">January - July 2021</div>\r\n            </CCol>\r\n            <CCol sm={7} className=\"d-none d-md-block\">\r\n              <CButton color=\"primary\" className=\"float-end\">\r\n                <CIcon icon={cilCloudDownload} />\r\n              </CButton>\r\n              <CButtonGroup className=\"float-end me-3\">\r\n                {['Day', 'Month', 'Year'].map((value) => (\r\n                  <CButton\r\n                    color=\"outline-secondary\"\r\n                    key={value}\r\n                    className=\"mx-0\"\r\n                    active={value === 'Month'}\r\n                  >\r\n                    {value}\r\n                  </CButton>\r\n                ))}\r\n              </CButtonGroup>\r\n            </CCol>\r\n          </CRow>\r\n          <CChartLine\r\n            style={{ height: '300px', marginTop: '40px' }}\r\n            data={{\r\n              labels: months,\r\n              datasets: [\r\n                {\r\n                  label: 'Utilisateurs',\r\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\r\n                  borderColor: getStyle('--cui-info'),\r\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\r\n                  borderWidth: 2,\r\n                  data:users,\r\n                  fill: true,\r\n                },\r\n                {\r\n                  label: 'Enchères',\r\n                  backgroundColor: 'transparent',\r\n                  borderColor: getStyle('--cui-success'),\r\n                  pointHoverBackgroundColor: getStyle('--cui-success'),\r\n                  borderWidth: 2,\r\n                  data: rooms,\r\n                  fill: true,\r\n                },\r\n                {\r\n                  label: 'Commandes',\r\n                  backgroundColor: 'transparent',\r\n                  borderColor: getStyle('--cui-danger'),\r\n                  pointHoverBackgroundColor: getStyle('--cui-danger'),\r\n                  borderWidth: 1,\r\n                  data:orders,\r\n                  fill: true,\r\n                },\r\n                {\r\n                  label: 'Transactions',\r\n                  backgroundColor: 'transparent',\r\n                  borderColor: getStyle('--cui-warning'),\r\n                  pointHoverBackgroundColor: getStyle('--cui-warning'),\r\n                  borderWidth: 1,\r\n                  data:transactions,\r\n                  fill: true,\r\n                }\r\n              ],\r\n            }}\r\n            options={{\r\n              maintainAspectRatio: false,\r\n              plugins: {\r\n                legend: {\r\n                  display: false,\r\n                },\r\n              },\r\n              scales: {\r\n                x: {\r\n                  grid: {\r\n                    drawOnChartArea: false,\r\n                  },\r\n                },\r\n                y: {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    maxTicksLimit: 5,\r\n                    stepSize: Math.ceil(250 / 5),\r\n                    max: 250,\r\n                  },\r\n                },\r\n              },\r\n              elements: {\r\n                line: {\r\n                  tension: 0.4,\r\n                },\r\n                point: {\r\n                  radius: 0,\r\n                  hitRadius: 10,\r\n                  hoverRadius: 4,\r\n                  hoverBorderWidth: 3,\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CRow xs={{ cols: 1 }} md={{ cols: 4 }} className=\"text-center\">\r\n            {progressExample.map((item, index) => (\r\n              <CCol className=\"mb-sm-2 mb-0\" key={index}>\r\n                <div className=\"text-medium-emphasis\">{item.title}</div>\r\n                <strong>\r\n                  {item.value} ({item.percent}%)\r\n                </strong>\r\n                <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        </CCardFooter>\r\n      </CCard>\r\n\r\n     {/*  <WidgetsBrand withCharts /> */}\r\n\r\n     {/*  <CRow>\r\n        <CCol xs>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>Traffic {' & '} Sales</CCardHeader>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol xs={12} md={6} xl={6}>\r\n                  <CRow>\r\n                    <CCol sm={6}>\r\n                      <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\r\n                        <div className=\"text-medium-emphasis small\">New Clients</div>\r\n                        <div className=\"fs-5 fw-semibold\">9,123</div>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol sm={6}>\r\n                      <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\r\n                        <div className=\"text-medium-emphasis small\">Recurring Clients</div>\r\n                        <div className=\"fs-5 fw-semibold\">22,643</div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n\r\n                  <hr className=\"mt-0\" />\r\n                  {progressGroupExample1.map((item, index) => (\r\n                    <div className=\"progress-group mb-4\" key={index}>\r\n                      <div className=\"progress-group-prepend\">\r\n                        <span className=\"text-medium-emphasis small\">{item.title}</span>\r\n                      </div>\r\n                      <div className=\"progress-group-bars\">\r\n                        <CProgress thin color=\"info\" value={item.value1} />\r\n                        <CProgress thin color=\"danger\" value={item.value2} />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </CCol>\r\n\r\n                <CCol xs={12} md={6} xl={6}>\r\n                  <CRow>\r\n                    <CCol sm={6}>\r\n                      <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\r\n                        <div className=\"text-medium-emphasis small\">Pageviews</div>\r\n                        <div className=\"fs-5 fw-semibold\">78,623</div>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol sm={6}>\r\n                      <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\r\n                        <div className=\"text-medium-emphasis small\">Organic</div>\r\n                        <div className=\"fs-5 fw-semibold\">49,123</div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n\r\n                  <hr className=\"mt-0\" />\r\n\r\n                  {progressGroupExample2.map((item, index) => (\r\n                    <div className=\"progress-group mb-4\" key={index}>\r\n                      <div className=\"progress-group-header\">\r\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\r\n                        <span>{item.title}</span>\r\n                        <span className=\"ms-auto fw-semibold\">{item.value}%</span>\r\n                      </div>\r\n                      <div className=\"progress-group-bars\">\r\n                        <CProgress thin color=\"warning\" value={item.value} />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n\r\n                  <div className=\"mb-5\"></div>\r\n\r\n                  {progressGroupExample3.map((item, index) => (\r\n                    <div className=\"progress-group\" key={index}>\r\n                      <div className=\"progress-group-header\">\r\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\r\n                        <span>{item.title}</span>\r\n                        <span className=\"ms-auto fw-semibold\">\r\n                          {item.value}{' '}\r\n                          <span className=\"text-medium-emphasis small\">({item.percent}%)</span>\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"progress-group-bars\">\r\n                        <CProgress thin color=\"success\" value={item.percent} />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <br />\r\n\r\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\r\n                <CTableHead color=\"light\">\r\n                  <CTableRow>\r\n                    <CTableHeaderCell className=\"text-center\">\r\n                      <CIcon icon={cilPeople} />\r\n                    </CTableHeaderCell>\r\n                    <CTableHeaderCell>User</CTableHeaderCell>\r\n                    <CTableHeaderCell className=\"text-center\">Country</CTableHeaderCell>\r\n                    <CTableHeaderCell>Usage</CTableHeaderCell>\r\n                    <CTableHeaderCell className=\"text-center\">Payment Method</CTableHeaderCell>\r\n                    <CTableHeaderCell>Activity</CTableHeaderCell>\r\n                  </CTableRow>\r\n                </CTableHead>\r\n                <CTableBody>\r\n                  {tableExample.map((item, index) => (\r\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\r\n                      <CTableDataCell className=\"text-center\">\r\n                        <CAvatar size=\"md\" src={item.avatar.src} status={item.avatar.status} />\r\n                      </CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <div>{item.user.name}</div>\r\n                        <div className=\"small text-medium-emphasis\">\r\n                          <span>{item.user.new ? 'New' : 'Recurring'}</span> | Registered:{' '}\r\n                          {item.user.registered}\r\n                        </div>\r\n                      </CTableDataCell>\r\n                      <CTableDataCell className=\"text-center\">\r\n                        <CIcon size=\"xl\" icon={item.country.flag} title={item.country.name} />\r\n                      </CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <div className=\"clearfix\">\r\n                          <div className=\"float-start\">\r\n                            <strong>{item.usage.value}%</strong>\r\n                          </div>\r\n                          <div className=\"float-end\">\r\n                            <small className=\"text-medium-emphasis\">{item.usage.period}</small>\r\n                          </div>\r\n                        </div>\r\n                        <CProgress thin color={item.usage.color} value={item.usage.value} />\r\n                      </CTableDataCell>\r\n                      <CTableDataCell className=\"text-center\">\r\n                        <CIcon size=\"xl\" icon={item.payment.icon} />\r\n                      </CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <div className=\"small text-medium-emphasis\">Last login</div>\r\n                        <strong>{item.activity}</strong>\r\n                      </CTableDataCell>\r\n                    </CTableRow>\r\n                  ))}\r\n                </CTableBody>\r\n              </CTable>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n"],"names":["months","users","rooms","transactions","orders","sm","lg","to","className","color","value","icon","cilArrowBottom","title","action","alignment","caret","cilOptions","disabled","chart","style","height","data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","getStyle","options","plugins","legend","display","maintainAspectRatio","scales","x","grid","drawBorder","ticks","y","min","max","elements","line","borderWidth","tension","point","radius","hitRadius","hoverRadius","cilArrowTop","fill","barPercentage","drawTicks","useState","setUsers","setRooms","setOrders","setTransactions","setLoader","useEffect","axios","then","res","arr","forEach","month","test","findIndex","elm","push","numberofdocuments","catch","err","id","cilCloudDownload","map","active","marginTop","hexToRgba","pointHoverBackgroundColor","drawOnChartArea","beginAtZero","maxTicksLimit","stepSize","Math","ceil","hoverBorderWidth","xs","cols","md","percent","item","index","thin"],"sourceRoot":""}